How to Compile a kernel -- Using a previous config file. 


Kernel Tools: sudo apt-get install build-essential kernel-package libncurses5-dev bzip2 fakeroot


1'. Copy your config file from boot to kernel/ dir 
 
    cd /boot/ && cp config-3.2.0-23-generic  ~/kernel/

 

1. Create a dir call kernel/ && download the sources && untar under kernel dir


   mkdir kernel 

   wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.11.6.tar.xz  
    
   tar xvf linux-3.11.6.tar.xz 


2. Make a symbolic link 

   ln -s linux-3.11.6 linux 



3. Change dir to linux && run the following command. 

   cd linux 
   
   make clean && make mrproper 



4. Go back to Kernel/ dir and copy config-3.2.0-23-generic linux/.config  && rename to .config 
 
    cp config-3.2.0-23-generic linux/.config 



5. Go back to dir linux/ && run the following command 

    cd linux 

    make menuconfig 


6. Once you save your .config file Exit the menu. 


7. Compile you never want to compile your kernel as root, so you use fakeroot 


    fakeroot make-kpkg -j5 --initrd --append-to-version=-custom-os-elementary kernel_image kernel_headers
    
    
    Time 18:37 start time

     
   chown -R root:root                  /home/mati/kernel/linux/debian/linux-headers-3.11.6-custom-os-elementary
   chmod -R og=rX                      /home/mati/kernel/linux/debian/linux-headers-3.11.6-custom-os-elementary
   dpkg --build                        /home/mati/kernel/linux/debian/linux-headers-3.11.6-custom-os-elementary ..
   dpkg-deb: building package `linux-headers-3.11.6-custom-os-elementary' in `../linux-headers-3.11.6-custom-os-elementary_3.11.6-custom-os-elementary-10.00.Custom_amd64.deb'.
   cp -pf debian/control.dist          debian/control
   make[2]: Leaving directory `/home/mati/kernel/linux-3.11.6'
   make[1]: Leaving directory `/home/mati/kernel/linux-3.11.6'

   mati@laptop:~/kernel/linux$ ls

