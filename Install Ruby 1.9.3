rvm is a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from 
interpreters to sets of gems. 

veewee and Vagrant are both Ruby Gems so you’ll need to have Ruby and RubyGems installed. 

veewee the tool we use to build our own custom box, helps automate the process of building your own base boxes. 

vagrant the tool we use to configure and run our Virtual Machines.



1. Install RVM  
 
   curl -L https://get.rvm.io | bash -s stable

  . 
  .
  .
  .
  .

   # [user],
 #
 #   Thank you for using RVM!
 #   I sincerely hope that RVM helps to make your life easier and
 #   more enjoyable!!!
 #
 # ~Wayne



2. Add 'source /home/developer/.rvm/scripts/rvm' to   ~ /.bashrc & reload .bashrc file-  

   Installation add this line to .bashrc 

   PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting


3. update RVM && install ruby 

  rvm update
  rvm reload

  rvm install 1.9.3
  rvm use 1.9.3 --default
  
  ------------------------------------------------------------------------------------------------------------
  
  sudo apt-get install libxml2-dev libxslt-dev


4. Define Gem Dependencies

  Since we’re using veewee and Vagrant, we need to install those Gems for our project to work. The best way to do this is
  using a Gemfile which lists the version of each Gem we want to use. So create a Gemfile in your project’s directory with
  the following contents:
  
  source :rubygems
  gem 'vagrant', '1.0.5'
  gem 'veewee', '0.3.7'

  Then to install the gems simple run:

  $ bundle
  
  Your bundle is complete!
  Use `bundle show [gemname]` to see where a bundled gem is installed.
  
  [developer@glb7239 veewee-centos63]$ gem --list
  
  
5. You are ready to use veewee & vagrant! Create Base Box Definition 

   bundle exec veewee vbox templates 
   
   
----------------------------------------------------------------------------------------------------------------------

5'. Follow 

Automated VM Generation with veewee, Vagrant, Jenkins and Amazon S3 - Part 1

http://spilth.org/blog/2013/01/21/automated-vm-generation-with-veewee-jenkins-and-amazon-s3/



5''. To use it:

   vagrant init 'vmname'

   vagrant up

   vagrant ssh



Vagrant Cheatsheat 


http://earlyandoften.wordpress.com/2012/09/06/vagrant-cheatsheat/



----------------------------------------------------------------------------------------------------------------------- 



5'''. VirtualBox 4.3 Error [--sataportcount 1] when bundle exec veewee vbox build 'vmname' 

   https://github.com/jedi4ever/veewee/issues/820
   
   https://github.com/jedi4ever/veewee/blob/master/lib/veewee/provider/virtualbox/box/helper/create.rb#L14
   
   Solution Edit File 
   
   vim ./.rvm/gems/ruby-1.9.3-p448/gems/veewee-0.3.7/lib/veewee/provider/virtualbox/box/helper/create.rb
   
   --sataportcount 1 too --portcount 1
   
   
   
-----------------------------------------------------------------------------------------------------------------------
Bug --- Virtual Box 4.3 

bundle exec vagrant basebox export 'ubuntu

Vagrant has detected that you have a version of VirtualBox installed
that is not supported. Please install one of the supported versions
listed below to use Vagrant:

4.0, 4.1, 4.2

---------------------------------------------------------------------------------------

https://github.com/mitchellh/vagrant/blob/v1.3.5/CHANGELOG.md#135-october-15-2013

VirtualBox 4.3 is now supported. [GH-2374] 

http://downloads.vagrantup.com/ 

ironic versioning error with vagrant+virtualbox: ...supported versions listed below to use Vagrant: 4.0, 4.1, 4.2
https://groups.google.com/forum/#!topic/vagrant-up/ia9BN-Df7jM

-----------------------------------------------------------------------------------------

developer@laptop-devops:~/Downloads$ sudo apt-cache show vagrant
Package: vagrant
Status: install ok installed
Priority: extra
Section: default
Installed-Size: 69244
Maintainer: HashiCorp <hello@hashicorp.com>
Architecture: amd64
Version: 1:1.3.5
Description: no description given
License: unknown
Vendor: @ubuntu-64
Homepage: http://example.com/no-uri-given

developer@laptop-devops:~/veewee-vm$ vagrant -v
Vagrant version 1.0.5


developer@laptop-devops:~/veewee-vm$ /usr/bin/vagrant -v
Vagrant 1.3.5




